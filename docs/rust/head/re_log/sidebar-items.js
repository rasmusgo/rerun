window.SIDEBAR_ITEMS = {"constant":[["CRATES_AT_WARN_LEVEL","Never log anything less serious than a `WARN` from these crates."],["CRATES_FORCED_TO_INFO","Never log anything less serious than a `INFO` from these crates."]],"enum":[["Level","An enum representing the available verbosity levels of the logger."],["LevelFilter","An enum representing the available verbosity level filters of the logger."]],"fn":[["add_boxed_logger","Install an additional global logger."],["add_logger","Install an additional global logger."],["is_log_enabled","Should we log this message given the filter?"],["setup_native_logging",""],["shorten_file_path","Shorten a path to a Rust source file."]],"macro":[["debug","Constructs an event at the debug level."],["debug_once","Logs a message once at the debug level."],["error","Constructs an event at the error level."],["error_once","Logs a message once at the error level."],["info","Constructs an event at the info level."],["info_once","Logs a message once at the info level."],["trace","Constructs an event at the trace level."],["trace_once","Logs a message once at the trace level."],["warn","Constructs an event at the warn level."],["warn_once","Logs a message once at the warn level."]],"mod":[["channel_logger","Capture log messages and send them to some receiver over a channel."],["multi_logger","Have multiple loggers implementing [`log::Log`] at once."],["setup","Function to setup logging in binaries and web apps."]],"struct":[["ChannelLogger","Pipe log messages to a channel."],["LogMsg",""],["MultiLoggerNotSetupError","Produced when trying to install additional loggers when [`crate::setup_native_logging`] has not been called."]]};